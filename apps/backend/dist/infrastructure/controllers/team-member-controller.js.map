{"version":3,"file":"team-member-controller.js","sources":["infrastructure/controllers/team-member-controller.ts"],"sourceRoot":"/","sourcesContent":["import { ControllerFunction } from \"@/adapters/express/make-express-callback\";\nimport createTeamMemberUseCase, {\n  CreateTeamMemberUseCaseType,\n} from \"../../application/use-cases/team-member/create-team-member\";\nimport getTeamMemberUseCase, {\n  GetTeamMemberUseCaseType,\n} from \"../../application/use-cases/team-member/get-team-members\";\nimport getTeamMemberByUserIdUseCase, {\n  GetTeamMemberByUserIdUseCaseType,\n} from \"../../application/use-cases/team-member/get-team-member-by-user-id\";\nimport { DEFAULT_USERS_TEAM } from \"../../entities/team-member\";\nimport updateTeamMemberSkillUseCase, {\n  type UpdateTeamMemberSkillUseCaseType,\n} from \"../../application/use-cases/team-member/update-team-member-skill\";\nimport inviteOrSwitchTeamUseCase, {\n  InviteOrSwitchTeamUseCaseType,\n} from \"../../application/use-cases/team-member/invite-or-switch-team\";\nimport deleteTeamMemberUseCase, {\n  DeleteTeamMemberUseCaseType,\n} from \"../../application/use-cases/team-member/delete-team-member\";\n\ntype CreateTeamMemberControllerType = {\n  body: { userId: string; teamId: string };\n};\ntype GetTeamMemberByUserIdControllerType = {};\ntype InviteOrSwitchTeamController = {\n  body: { email: string; consentId: string };\n};\ntype GetTeamMembersByTeamIdController = { params: { teamId: string } };\ntype DeleteTeamMemberControllerType = { body: { id: string } };\ntype UpdateTeamMemberSkillControllerType = {\n  params: { teamId: string };\n  body: {\n    memberId: string;\n    canAccessStocks?: boolean;\n    canAccessClients?: boolean;\n    canAccessVisits?: boolean;\n  };\n};\n\nconst createTeamMemberController = (dependencies: {\n  createTeamMemberUseCase: CreateTeamMemberUseCaseType;\n  getTeamMembersUseCase: GetTeamMemberUseCaseType;\n  getTeamMemberByUserIdUseCase: GetTeamMemberByUserIdUseCaseType;\n  updateTeamMemberSkillUseCase: UpdateTeamMemberSkillUseCaseType;\n  inviteOrSwitchTeamUseCase: InviteOrSwitchTeamUseCaseType;\n  deleteTeamMemberUseCase: DeleteTeamMemberUseCaseType;\n}) => {\n  const createTeamMemberController: ControllerFunction<\n    CreateTeamMemberControllerType\n  > = async (httpRequest) => {\n    const { userId, teamId } = httpRequest.body;\n\n    try {\n      const newTeamMember = await dependencies.createTeamMemberUseCase.execute({\n        userId,\n        teamId,\n      });\n\n      return {\n        statusCode: 201,\n        body: newTeamMember,\n      };\n    } catch (error) {\n      return {\n        statusCode: 400,\n        body: { error },\n      };\n    }\n  };\n  const inviteOrSwitchTeamController: ControllerFunction<\n    InviteOrSwitchTeamController\n  > = async (httpRequest) => {\n    const { email, consentId } = httpRequest.body;\n    const userId = httpRequest.userId;\n\n    try {\n      const teamOwner = await dependencies.getTeamMemberByUserIdUseCase.execute(\n        { userId }\n      );\n\n      if (!teamOwner) {\n        throw Error(\"You do not have any team. You are not allowed to invite.\");\n      }\n\n      const newTeamMember =\n        await dependencies.inviteOrSwitchTeamUseCase.execute({\n          invitedEmail: email,\n          invitedUserIdLast4: consentId,\n          newTeamId: teamOwner?.teamId,\n          userId,\n        });\n\n      return {\n        statusCode: 201,\n        body: newTeamMember,\n      };\n    } catch (error) {\n      return {\n        statusCode: 400,\n        body: { error },\n      };\n    }\n  };\n\n  const getTeamMembersByTeamIdController: ControllerFunction<\n    GetTeamMembersByTeamIdController\n  > = async (httpRequest) => {\n    try {\n      let teamId = httpRequest.params.teamId;\n      const userId = httpRequest.userId;\n\n      if (!teamId) {\n        return {\n          statusCode: 400,\n          body: { error: \"Team ID is required\" },\n        };\n      }\n\n      if (teamId === DEFAULT_USERS_TEAM) {\n        const teamMember =\n          await dependencies.getTeamMemberByUserIdUseCase.execute({ userId });\n\n        if (!teamMember?.teamId) {\n          return {\n            statusCode: 404,\n            body: { error: \"No team associated with this user\" },\n          };\n        }\n\n        teamId = teamMember.teamId;\n      }\n\n      const teamMembers = await dependencies.getTeamMembersUseCase.execute({\n        teamId,\n        userId,\n      });\n\n      return {\n        statusCode: 200,\n        body: teamMembers,\n      };\n    } catch (error) {\n      return {\n        statusCode: 400,\n        body: { error },\n      };\n    }\n  };\n\n  const getTeamMemberByUserIdController: ControllerFunction<\n    GetTeamMemberByUserIdControllerType\n  > = async (httpRequest) => {\n    const userId = httpRequest.userId;\n\n    if (!userId) {\n      return {\n        statusCode: 400,\n        body: { error: \"User ID is required\" },\n      };\n    }\n\n    try {\n      const teamMember =\n        await dependencies.getTeamMemberByUserIdUseCase.execute({\n          userId,\n        });\n\n      if (!teamMember) {\n        return {\n          statusCode: 404,\n          body: { error: \"No team found for user\" },\n        };\n      }\n\n      return {\n        statusCode: 200,\n        body: teamMember,\n      };\n    } catch (error) {\n      return {\n        statusCode: 500,\n        body: { error: \"Server error\" },\n      };\n    }\n  };\n\n  const updateTeamMemberSkillController: ControllerFunction<\n    UpdateTeamMemberSkillControllerType\n  > = async (httpRequest) => {\n    const teamId = httpRequest.params.teamId;\n\n    const memberData = {\n      ...httpRequest.body,\n      userId: httpRequest.body.memberId,\n      teamId: teamId,\n    };\n\n    try {\n      if (!teamId) {\n        return {\n          statusCode: 400,\n          body: { error: \"Member ID is required\" },\n        };\n      }\n\n      const updatedMember =\n        await dependencies.updateTeamMemberSkillUseCase.execute(memberData);\n\n      return {\n        statusCode: 200,\n        body: updatedMember,\n      };\n    } catch (error) {\n      return {\n        statusCode: 500,\n        body: { error: \"Server error\" },\n      };\n    }\n  };\n  const deleteTeamMemberController: ControllerFunction<\n    DeleteTeamMemberControllerType\n  > = async (httpRequest) => {\n    const id = httpRequest.body.id;\n\n    try {\n      if (!id) {\n        return {\n          statusCode: 400,\n          body: { error: \"Team member does not exists.\" },\n        };\n      }\n      const deletedTeamMember =\n        await dependencies.deleteTeamMemberUseCase.execute(id);\n\n      return {\n        statusCode: 200,\n        body: deletedTeamMember,\n      };\n    } catch (error) {\n      return {\n        statusCode: 500,\n        body: { error: \"Server error\" },\n      };\n    }\n  };\n\n  return {\n    createTeamMemberController,\n    getTeamMembersByTeamIdController,\n    getTeamMemberByUserIdController,\n    updateTeamMemberSkillController,\n    inviteOrSwitchTeamController,\n    deleteTeamMemberController,\n  };\n};\n\nconst teamMemberController = createTeamMemberController({\n  createTeamMemberUseCase,\n  getTeamMembersUseCase: getTeamMemberUseCase,\n  getTeamMemberByUserIdUseCase,\n  updateTeamMemberSkillUseCase,\n  inviteOrSwitchTeamUseCase,\n  deleteTeamMemberUseCase,\n});\n\nexport default teamMemberController;\n"],"names":[],"mappings":";;;;;;;AACA,oHAEoE;AACpE,gHAEkE;AAClE,oIAE4E;AAC5E,4DAAgE;AAChE,gIAE0E;AAC1E,0HAEuE;AACvE,oHAEoE;AAqBpE,MAAM,0BAA0B,GAAG,CAAC,YAOnC,EAAE,EAAE;IACH,MAAM,0BAA0B,GAE5B,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;QAE5C,IAAI,CAAC;YACH,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,uBAAuB,CAAC,OAAO,CAAC;gBACvE,MAAM;gBACN,MAAM;aACP,CAAC,CAAC;YAEH,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,aAAa;aACpB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE;aAChB,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IACF,MAAM,4BAA4B,GAE9B,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC;QAC9C,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAElC,IAAI,CAAC;YACH,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,4BAA4B,CAAC,OAAO,CACvE,EAAE,MAAM,EAAE,CACX,CAAC;YAEF,IAAI,CAAC,SAAS,EAAE,CAAC;gBACf,MAAM,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAC1E,CAAC;YAED,MAAM,aAAa,GACjB,MAAM,YAAY,CAAC,yBAAyB,CAAC,OAAO,CAAC;gBACnD,YAAY,EAAE,KAAK;gBACnB,kBAAkB,EAAE,SAAS;gBAC7B,SAAS,EAAE,SAAS,EAAE,MAAM;gBAC5B,MAAM;aACP,CAAC,CAAC;YAEL,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,aAAa;aACpB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE;aAChB,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,gCAAgC,GAElC,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,IAAI,CAAC;YACH,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;YACvC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;YAElC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,OAAO;oBACL,UAAU,EAAE,GAAG;oBACf,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE;iBACvC,CAAC;YACJ,CAAC;YAED,IAAI,MAAM,KAAK,gCAAkB,EAAE,CAAC;gBAClC,MAAM,UAAU,GACd,MAAM,YAAY,CAAC,4BAA4B,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;gBAEtE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,CAAC;oBACxB,OAAO;wBACL,UAAU,EAAE,GAAG;wBACf,IAAI,EAAE,EAAE,KAAK,EAAE,mCAAmC,EAAE;qBACrD,CAAC;gBACJ,CAAC;gBAED,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;YAC7B,CAAC;YAED,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,qBAAqB,CAAC,OAAO,CAAC;gBACnE,MAAM;gBACN,MAAM;aACP,CAAC,CAAC;YAEH,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,WAAW;aAClB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE;aAChB,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,+BAA+B,GAEjC,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAElC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE;aACvC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC;YACH,MAAM,UAAU,GACd,MAAM,YAAY,CAAC,4BAA4B,CAAC,OAAO,CAAC;gBACtD,MAAM;aACP,CAAC,CAAC;YAEL,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,OAAO;oBACL,UAAU,EAAE,GAAG;oBACf,IAAI,EAAE,EAAE,KAAK,EAAE,wBAAwB,EAAE;iBAC1C,CAAC;YACJ,CAAC;YAED,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,UAAU;aACjB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;aAChC,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,+BAA+B,GAEjC,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;QAEzC,MAAM,UAAU,GAAG;YACjB,GAAG,WAAW,CAAC,IAAI;YACnB,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,QAAQ;YACjC,MAAM,EAAE,MAAM;SACf,CAAC;QAEF,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,OAAO;oBACL,UAAU,EAAE,GAAG;oBACf,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE;iBACzC,CAAC;YACJ,CAAC;YAED,MAAM,aAAa,GACjB,MAAM,YAAY,CAAC,4BAA4B,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAEtE,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,aAAa;aACpB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;aAChC,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IACF,MAAM,0BAA0B,GAE5B,KAAK,EAAE,WAAW,EAAE,EAAE;QACxB,MAAM,EAAE,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;QAE/B,IAAI,CAAC;YACH,IAAI,CAAC,EAAE,EAAE,CAAC;gBACR,OAAO;oBACL,UAAU,EAAE,GAAG;oBACf,IAAI,EAAE,EAAE,KAAK,EAAE,8BAA8B,EAAE;iBAChD,CAAC;YACJ,CAAC;YACD,MAAM,iBAAiB,GACrB,MAAM,YAAY,CAAC,uBAAuB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAEzD,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,iBAAiB;aACxB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO;gBACL,UAAU,EAAE,GAAG;gBACf,IAAI,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;aAChC,CAAC;QACJ,CAAC;IACH,CAAC,CAAC;IAEF,OAAO;QACL,0BAA0B;QAC1B,gCAAgC;QAChC,+BAA+B;QAC/B,+BAA+B;QAC/B,4BAA4B;QAC5B,0BAA0B;KAC3B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,0BAA0B,CAAC;IACtD,uBAAuB,EAAvB,4BAAuB;IACvB,qBAAqB,EAAE,0BAAoB;IAC3C,4BAA4B,EAA5B,oCAA4B;IAC5B,4BAA4B,EAA5B,kCAA4B;IAC5B,yBAAyB,EAAzB,+BAAyB;IACzB,uBAAuB,EAAvB,4BAAuB;CACxB,CAAC,CAAC;AAEH,kBAAe,oBAAoB,CAAC","debug_id":"03ed8c37-3e82-5db2-a5d5-37cc1b4ec86e"}