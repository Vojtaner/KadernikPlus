{"version":3,"file":"client-controller.js","sources":["infrastructure/controllers/client-controller.ts"],"sourceRoot":"/","sourcesContent":["import addOrUpdateClientUseCase, {\n  CreateAddOrUpdateClientUseCaseType,\n} from \"../../application/use-cases/clients/add-or-update-client\";\nimport getClientByIdUseCase, {\n  CreateGetClientByIdUseCaseType,\n} from \"../../application/use-cases/clients/get-client-by-id\";\nimport { ControllerFunction } from \"../../adapters/express/make-express-callback\";\nimport { ClientOrUpdateCreateData } from \"../../entities/client\";\nimport getAllClientsByUserIdUseCase, {\n  GetAllClientsByUserIdUseCaseType,\n} from \"../../application/use-cases/clients/get-all-clients\";\nimport searchClientsUseCase, {\n  SearchClientsUseCaseType,\n} from \"../../application/use-cases/clients/search-client\";\n\ntype GetClientByIdControllerType = { params: { clientId: string } };\ntype AddClientControllerType = {};\nconst createClientController = (dependencies: {\n  addOrUpdateClientUseCase: CreateAddOrUpdateClientUseCaseType;\n  getClientByIdUseCase: CreateGetClientByIdUseCaseType;\n  getAllClientsByUserIdUseCase: GetAllClientsByUserIdUseCaseType;\n  searchClientsUseCase: SearchClientsUseCaseType;\n}) => {\n  const findClientsController: ControllerFunction<{\n    query: { query: string };\n  }> = async (httpRequest) => {\n    try {\n      const { query } = httpRequest.query;\n      const userId = httpRequest.userId;\n\n      const clients = await dependencies.searchClientsUseCase.execute(\n        userId,\n        query\n      );\n\n      return {\n        statusCode: 200,\n        body: clients,\n      };\n    } catch (error: any) {\n      console.error(\"Error in findClientsController:\", error);\n      return {\n        statusCode: 500,\n        body: { error: \"Internal Server Error\" },\n      };\n    }\n  };\n\n  const addOrUpdateClientController: ControllerFunction<\n    AddClientControllerType\n  > = async (httpRequest) => {\n    try {\n      const clientData: ClientOrUpdateCreateData = httpRequest.body;\n      const userId = httpRequest.userId;\n\n      const clientDataWithUserId = { ...clientData, userId };\n\n      const newOrUpdatedClient =\n        await dependencies.addOrUpdateClientUseCase.execute(\n          clientDataWithUserId\n        );\n      return {\n        statusCode: 201,\n        body: newOrUpdatedClient,\n      };\n    } catch (error: any) {\n      if (\n        error.name === \"UserNotFoundError\" ||\n        error.name === \"ClientNotFoundError\"\n      ) {\n        return {\n          statusCode: 400,\n          body: { error: error.message },\n        };\n      }\n\n      console.error(\"Error in addClientController:\", error);\n      throw error;\n    }\n  };\n\n  const getAllClientsByUserIdController: ControllerFunction<\n    GetClientByIdControllerType\n  > = async (httpRequest) => {\n    try {\n      const userId = httpRequest.userId;\n\n      const clients = await dependencies.getAllClientsByUserIdUseCase.execute(\n        userId\n      );\n\n      return {\n        statusCode: 201,\n        body: clients,\n      };\n    } catch (error: any) {\n      if (\n        error.name === \"UserNotFoundError\" ||\n        error.name === \"ClientNotFoundError\"\n      ) {\n        return {\n          statusCode: 400,\n          body: { error: error.message },\n        };\n      }\n\n      console.error(\"Error in getAllClientsController:\", error);\n      throw error;\n    }\n  };\n  const getClientByIdController: ControllerFunction<\n    GetClientByIdControllerType\n  > = async (httpRequest) => {\n    try {\n      const clientId = httpRequest.params.clientId;\n      const userId = httpRequest.userId;\n\n      const client = await dependencies.getClientByIdUseCase.execute(\n        clientId,\n        userId\n      );\n\n      return {\n        statusCode: 201,\n        body: client,\n      };\n    } catch (error: any) {\n      if (\n        error.name === \"UserNotFoundError\" ||\n        error.name === \"ClientNotFoundError\"\n      ) {\n        return {\n          statusCode: 400,\n          body: { error: error.message },\n        };\n      }\n\n      console.error(\"Error in getClientByIdController:\", error);\n      throw error;\n    }\n  };\n\n  return {\n    addOrUpdateClientController,\n    getClientByIdController,\n    getAllClientsByUserIdController,\n    findClientsController,\n  };\n};\n\nconst clientController = createClientController({\n  addOrUpdateClientUseCase,\n  getClientByIdUseCase,\n  getAllClientsByUserIdUseCase,\n  searchClientsUseCase,\n});\n\nexport default clientController;\n"],"names":[],"mappings":"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","debug_id":"1461a869-60b2-54b5-81d1-5666d5b5680c"}