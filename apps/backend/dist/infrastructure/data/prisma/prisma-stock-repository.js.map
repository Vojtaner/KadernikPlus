{"version":3,"file":"prisma-stock-repository.js","sources":["infrastructure/data/prisma/prisma-stock-repository.ts"],"sourceRoot":"/","sourcesContent":["import { PrismaClient, Stock } from \".prisma/client\";\nimport { StockRepositoryPort } from \"../../../application/ports/stock-repository\";\nimport prisma from \"./prisma\";\n\nconst createStockRepositoryDb = (\n  prismaStockRepository: PrismaClient\n): StockRepositoryPort => {\n  return {\n    createStock: async (userId: string, teamId: string): Promise<Stock> => {\n      const count = await prismaStockRepository.stock.count({\n        where: { ownerId: userId },\n      });\n\n      const stock = await prismaStockRepository.stock.create({\n        data: {\n          ownerId: userId,\n          stockName: `Sklad ${count + 1}`,\n          teamId,\n        },\n      });\n\n      return stock;\n    },\n    updateStock: async (\n      teamId: string,\n      invitedUserId: string\n    ): Promise<Stock> => {\n      const stockToUpdate = await prisma.stock.findFirst({\n        where: { ownerId: invitedUserId },\n      });\n\n      if (stockToUpdate) {\n        const updatedStock = await prisma.stock.update({\n          where: { id: stockToUpdate.id },\n          data: { teamId },\n        });\n\n        return updatedStock;\n      } else {\n        throw new Error(\"Sklad zvaného uživatele nenalezen. Nemožné přidat.\");\n      }\n    },\n\n    getStocks: async (userId: string): Promise<Stock[]> => {\n      const stocks = await prismaStockRepository.stock.findMany({\n        where: {\n          ownerId: userId,\n        },\n      });\n\n      return stocks;\n    },\n  };\n};\n\nconst stockRepositoryDb = createStockRepositoryDb(prisma);\n\nexport default stockRepositoryDb;\n"],"names":[],"mappings":";;;;;;;AAEA,sDAA8B;AAE9B,MAAM,uBAAuB,GAAG,CAC9B,qBAAmC,EACd,EAAE;IACvB,OAAO;QACL,WAAW,EAAE,KAAK,EAAE,MAAc,EAAE,MAAc,EAAkB,EAAE;YACpE,MAAM,KAAK,GAAG,MAAM,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC;gBACpD,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;aAC3B,CAAC,CAAC;YAEH,MAAM,KAAK,GAAG,MAAM,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC;gBACrD,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;oBACf,SAAS,EAAE,SAAS,KAAK,GAAG,CAAC,EAAE;oBAC/B,MAAM;iBACP;aACF,CAAC,CAAC;YAEH,OAAO,KAAK,CAAC;QACf,CAAC;QACD,WAAW,EAAE,KAAK,EAChB,MAAc,EACd,aAAqB,EACL,EAAE;YAClB,MAAM,aAAa,GAAG,MAAM,gBAAM,CAAC,KAAK,CAAC,SAAS,CAAC;gBACjD,KAAK,EAAE,EAAE,OAAO,EAAE,aAAa,EAAE;aAClC,CAAC,CAAC;YAEH,IAAI,aAAa,EAAE,CAAC;gBAClB,MAAM,YAAY,GAAG,MAAM,gBAAM,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC7C,KAAK,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE;oBAC/B,IAAI,EAAE,EAAE,MAAM,EAAE;iBACjB,CAAC,CAAC;gBAEH,OAAO,YAAY,CAAC;YACtB,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;YACxE,CAAC;QACH,CAAC;QAED,SAAS,EAAE,KAAK,EAAE,MAAc,EAAoB,EAAE;YACpD,MAAM,MAAM,GAAG,MAAM,qBAAqB,CAAC,KAAK,CAAC,QAAQ,CAAC;gBACxD,KAAK,EAAE;oBACL,OAAO,EAAE,MAAM;iBAChB;aACF,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;QAChB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,iBAAiB,GAAG,uBAAuB,CAAC,gBAAM,CAAC,CAAC;AAE1D,kBAAe,iBAAiB,CAAC","debug_id":"9ceabaf9-5095-5e82-b905-e0cc2d93c2e5"}