{"version":3,"file":"prisma-user-repository.js","sources":["infrastructure/data/prisma/prisma-user-repository.ts"],"sourceRoot":"/","sourcesContent":["import { User, UserCreateData } from \"@/entities/user\";\nimport { UserRepositoryPort } from \"../../../application/ports/user-repository\";\nimport { PrismaClient } from \"@prisma/client\";\nimport mapToDomainUser from \"../../../infrastructure/mappers/user-mapper\";\nimport prisma from \"./prisma\";\n\nconst createUserRepositoryDb = (\n  prismaUserRepository: PrismaClient\n): UserRepositoryPort => ({\n  add: async (userData: UserCreateData): Promise<User> => {\n    const newUser = await prismaUserRepository.user.create({\n      data: {\n        id: userData.id,\n        name: userData.name,\n        email: userData.email,\n        authProvider: userData.authProvider,\n        lastLogin: userData.lastLogin,\n      },\n    });\n\n    return mapToDomainUser(newUser);\n  },\n\n  findById: async (id: string): Promise<User | null> => {\n    const user = await prismaUserRepository.user.findUnique({\n      where: { id },\n    });\n\n    return user ? mapToDomainUser(user) : null;\n  },\n\n  findByEmail: async (email: string): Promise<User | null> => {\n    const user = await prismaUserRepository.user.findUnique({\n      where: { email },\n    });\n\n    return user ? mapToDomainUser(user) : null;\n  },\n\n  findAll: async (): Promise<User[]> => {\n    const users = await prismaUserRepository.user.findMany();\n\n    return users.map(mapToDomainUser);\n  },\n});\n\nconst userRepositoryDb = createUserRepositoryDb(prisma);\n\nexport default userRepositoryDb;\n"],"names":[],"mappings":";;;;;;;AAGA,8FAA0E;AAC1E,sDAA8B;AAE9B,MAAM,sBAAsB,GAAG,CAC7B,oBAAkC,EACd,EAAE,CAAC,CAAC;IACxB,GAAG,EAAE,KAAK,EAAE,QAAwB,EAAiB,EAAE;QACrD,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC;YACrD,IAAI,EAAE;gBACJ,EAAE,EAAE,QAAQ,CAAC,EAAE;gBACf,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,YAAY,EAAE,QAAQ,CAAC,YAAY;gBACnC,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC9B;SACF,CAAC,CAAC;QAEH,OAAO,IAAA,qBAAe,EAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,QAAQ,EAAE,KAAK,EAAE,EAAU,EAAwB,EAAE;QACnD,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC;YACtD,KAAK,EAAE,EAAE,EAAE,EAAE;SACd,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,CAAC,CAAC,IAAA,qBAAe,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,WAAW,EAAE,KAAK,EAAE,KAAa,EAAwB,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC;YACtD,KAAK,EAAE,EAAE,KAAK,EAAE;SACjB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,CAAC,CAAC,IAAA,qBAAe,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC;IAED,OAAO,EAAE,KAAK,IAAqB,EAAE;QACnC,MAAM,KAAK,GAAG,MAAM,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEzD,OAAO,KAAK,CAAC,GAAG,CAAC,qBAAe,CAAC,CAAC;IACpC,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,gBAAgB,GAAG,sBAAsB,CAAC,gBAAM,CAAC,CAAC;AAExD,kBAAe,gBAAgB,CAAC","debug_id":"b5273cb2-88c7-5937-abdb-b54a01c7a15f"}