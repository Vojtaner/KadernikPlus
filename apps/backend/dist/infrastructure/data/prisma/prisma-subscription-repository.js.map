{"version":3,"file":"prisma-subscription-repository.js","sources":["infrastructure/data/prisma/prisma-subscription-repository.ts"],"sourceRoot":"/","sourcesContent":["import { PrismaClient, Subscription } from \".prisma/client\";\nimport {\n  SubscriptionCreateData,\n  SubscriptionRepositoryPort,\n} from \"../../../application/ports/subscription-repository\";\nimport prisma from \"./prisma\";\nimport { WithUserId } from \"@/entities/user\";\nimport dayjs from \"dayjs\";\n\nconst createSubscriptionRepositoryDb = (\n  prismaClient: PrismaClient\n): SubscriptionRepositoryPort => ({\n  add: async (\n    data: WithUserId<SubscriptionCreateData>\n  ): Promise<Subscription> => {\n    const newSub = await prismaClient.subscription.create({\n      data: {\n        userId: data.userId,\n        plan: data.plan,\n        status: data.status,\n        endDate: dayjs().add(10, \"days\").toISOString(),\n      },\n    });\n    return newSub;\n  },\n  async update(id: string, data: Partial<Subscription>): Promise<Subscription> {\n    console.log({ data, id });\n    const sub = await prisma.subscription.update({\n      where: { id },\n      data,\n    });\n\n    return sub;\n  },\n  findById: async (id) =>\n    await prismaClient.subscription.findUnique({ where: { id } }),\n  findByUserId: async (userId: string) => {\n    const subscription = await prismaClient.subscription.findFirst({\n      where: { userId: userId },\n    });\n\n    return subscription;\n  },\n  findActiveByUserId: async (userId: string) =>\n    await prismaClient.subscription.findFirst({\n      where: { userId, status: \"ACTIVE\" },\n    }),\n  cancel: async (id) =>\n    await prismaClient.subscription.update({\n      where: { id },\n      data: { status: \"CANCELLED\", endDate: new Date() },\n    }),\n});\n\nconst subscriptionRepositoryDb = createSubscriptionRepositoryDb(prisma);\n\nexport default subscriptionRepositoryDb;\n"],"names":[],"mappings":";;;;;;;AAKA,sDAA8B;AAE9B,kDAA0B;AAE1B,MAAM,8BAA8B,GAAG,CACrC,YAA0B,EACE,EAAE,CAAC,CAAC;IAChC,GAAG,EAAE,KAAK,EACR,IAAwC,EACjB,EAAE;QACzB,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC;YACpD,IAAI,EAAE;gBACJ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,IAAA,eAAK,GAAE,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,WAAW,EAAE;aAC/C;SACF,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,IAA2B;QAClD,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1B,MAAM,GAAG,GAAG,MAAM,gBAAM,CAAC,YAAY,CAAC,MAAM,CAAC;YAC3C,KAAK,EAAE,EAAE,EAAE,EAAE;YACb,IAAI;SACL,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IACD,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CACrB,MAAM,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/D,YAAY,EAAE,KAAK,EAAE,MAAc,EAAE,EAAE;QACrC,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;YAC7D,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;SAC1B,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;IACtB,CAAC;IACD,kBAAkB,EAAE,KAAK,EAAE,MAAc,EAAE,EAAE,CAC3C,MAAM,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC;QACxC,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;KACpC,CAAC;IACJ,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CACnB,MAAM,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC;QACrC,KAAK,EAAE,EAAE,EAAE,EAAE;QACb,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,IAAI,EAAE,EAAE;KACnD,CAAC;CACL,CAAC,CAAC;AAEH,MAAM,wBAAwB,GAAG,8BAA8B,CAAC,gBAAM,CAAC,CAAC;AAExE,kBAAe,wBAAwB,CAAC","debug_id":"bd6363a2-e3e8-5498-97ef-73ae20f99994"}