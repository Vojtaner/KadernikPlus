{"version":3,"file":"prisma-service-repository.js","sources":["infrastructure/data/prisma/prisma-service-repository.ts"],"sourceRoot":"/","sourcesContent":["import { ServiceCreateOrUpdateData } from \"../../../entities/service\";\nimport { ServiceRepositoryPort } from \"../../../application/ports/service-repository\";\nimport { PrismaClient, Service } from \"@prisma/client\";\nimport prisma from \"./prisma\";\nimport mapToDomainService from \"../../../infrastructure/mappers/service-mapper\";\nimport { WithUserId } from \"../../../entities/user\";\nimport teamMemberRepositoryDb from \"./prisma-team-member-repository\";\n\nconst createServiceRepositoryDb = (\n  prismaServiceRepository: PrismaClient\n): ServiceRepositoryPort => {\n  return {\n    getAllServices: async (userId: string): Promise<Service[]> => {\n      const services = await prismaServiceRepository.service.findMany({\n        where: { userId },\n      });\n\n      return services;\n    },\n    findByName: async (\n      serviceName: string,\n      userId: string\n    ): Promise<Service | null> => {\n      const service = await prismaServiceRepository.service.findUnique({\n        where: {\n          userId_serviceName: {\n            userId,\n            serviceName,\n          },\n        },\n      });\n\n      return service ?? null;\n    },\n    addOrUpdate: async (\n      serviceData: WithUserId<ServiceCreateOrUpdateData>\n    ): Promise<Service> => {\n      const { id: serviceId, userId } = serviceData;\n\n      if (serviceId) {\n        const existingService = await prismaServiceRepository.service.findFirst(\n          {\n            where: { id: serviceId },\n          }\n        );\n\n        if (existingService) {\n          const { userId, id, ...updateFields } = serviceData;\n\n          const updatedService = await prismaServiceRepository.service.update({\n            where: { id: serviceId },\n            data: { ...updateFields },\n          });\n\n          return updatedService;\n        }\n      }\n\n      const teamMember = await teamMemberRepositoryDb.findUniqueMember(userId);\n\n      if (!teamMember) {\n        throw Error(\"Chybí teamId nelze upravit službu.\");\n      }\n\n      if (!serviceData.serviceName) {\n        throw new Error(\"Zadejte název služby.\");\n      }\n\n      const newService = await prismaServiceRepository.service.create({\n        data: {\n          serviceName: serviceData.serviceName,\n          basePrice: serviceData.basePrice,\n          user: { connect: { id: serviceData.userId } },\n        },\n      });\n\n      return newService;\n    },\n  };\n};\n\nconst serviceRepositoryDb = createServiceRepositoryDb(prisma);\n\nexport default serviceRepositoryDb;\n"],"names":[],"mappings":";;;;;;;AAGA,sDAA8B;AAG9B,oGAAqE;AAErE,MAAM,yBAAyB,GAAG,CAChC,uBAAqC,EACd,EAAE;IACzB,OAAO;QACL,cAAc,EAAE,KAAK,EAAE,MAAc,EAAsB,EAAE;YAC3D,MAAM,QAAQ,GAAG,MAAM,uBAAuB,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAC9D,KAAK,EAAE,EAAE,MAAM,EAAE;aAClB,CAAC,CAAC;YAEH,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,UAAU,EAAE,KAAK,EACf,WAAmB,EACnB,MAAc,EACW,EAAE;YAC3B,MAAM,OAAO,GAAG,MAAM,uBAAuB,CAAC,OAAO,CAAC,UAAU,CAAC;gBAC/D,KAAK,EAAE;oBACL,kBAAkB,EAAE;wBAClB,MAAM;wBACN,WAAW;qBACZ;iBACF;aACF,CAAC,CAAC;YAEH,OAAO,OAAO,IAAI,IAAI,CAAC;QACzB,CAAC;QACD,WAAW,EAAE,KAAK,EAChB,WAAkD,EAChC,EAAE;YACpB,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC;YAE9C,IAAI,SAAS,EAAE,CAAC;gBACd,MAAM,eAAe,GAAG,MAAM,uBAAuB,CAAC,OAAO,CAAC,SAAS,CACrE;oBACE,KAAK,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;iBACzB,CACF,CAAC;gBAEF,IAAI,eAAe,EAAE,CAAC;oBACpB,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,GAAG,YAAY,EAAE,GAAG,WAAW,CAAC;oBAEpD,MAAM,cAAc,GAAG,MAAM,uBAAuB,CAAC,OAAO,CAAC,MAAM,CAAC;wBAClE,KAAK,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;wBACxB,IAAI,EAAE,EAAE,GAAG,YAAY,EAAE;qBAC1B,CAAC,CAAC;oBAEH,OAAO,cAAc,CAAC;gBACxB,CAAC;YACH,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,uCAAsB,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAEzE,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,MAAM,KAAK,CAAC,oCAAoC,CAAC,CAAC;YACpD,CAAC;YAED,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC7B,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;YAC3C,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,uBAAuB,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC9D,IAAI,EAAE;oBACJ,WAAW,EAAE,WAAW,CAAC,WAAW;oBACpC,SAAS,EAAE,WAAW,CAAC,SAAS;oBAChC,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,MAAM,EAAE,EAAE;iBAC9C;aACF,CAAC,CAAC;YAEH,OAAO,UAAU,CAAC;QACpB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,yBAAyB,CAAC,gBAAM,CAAC,CAAC;AAE9D,kBAAe,mBAAmB,CAAC","debug_id":"a924fb0a-7756-592a-8d86-bb53adb553d5"}