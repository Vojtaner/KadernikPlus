{"version":3,"file":"prisma-visit-repository.js","sources":["infrastructure/data/prisma/prisma-visit-repository.ts"],"sourceRoot":"/","sourcesContent":["import { VisitCreateData, VisitDetailFormType } from \"@/entities/visit\";\nimport { VisitRepositoryPort } from \"../../../application/ports/visit-repository\";\nimport { Prisma, PrismaClient } from \".prisma/client\";\nimport {\n  CreatedVisit,\n  VisitWithServices,\n  VisitWithServicesWithProceduresWithStockAllowances,\n} from \"../../mappers/visit-mapper\";\nimport prisma from \"./prisma\";\nimport { WithUserId } from \"@/entities/user\";\nimport { HasId } from \"@/domain/entity\";\n\nexport const createVisitRepositoryDb = (\n  prismaRepository: PrismaClient\n): VisitRepositoryPort => ({\n  add: async (\n    visitData: WithUserId<VisitCreateData>\n  ): Promise<CreatedVisit> => {\n    const userTeam = await prismaRepository.teamMember.findFirst({\n      where: { userId: visitData.userId },\n    });\n\n    if (!userTeam) {\n      throw new Error(\"User is not assigned to any team.\");\n    }\n\n    const serviceIds = [visitData.serviceIds];\n\n    const newVisit = await prismaRepository.visit.create({\n      data: {\n        clientId: visitData.clientId,\n        userId: visitData.userId,\n        date: visitData.date,\n        paidPrice: Number(visitData.paidPrice),\n        teamId: userTeam.teamId,\n        deposit: Number(visitData.deposit) ?? 0,\n        visitServices: {\n          create: serviceIds.map((serviceId) => ({\n            service: { connect: { id: serviceId } },\n          })),\n        },\n      },\n      include: {\n        visitServices: true,\n      },\n    });\n\n    return newVisit;\n  },\n  updateStatus: async (visitId: string, checked: boolean) => {\n    const updatedVisit = await prisma.visit.update({\n      where: { id: visitId },\n      data: {\n        visitStatus: checked,\n      },\n    });\n\n    return updatedVisit;\n  },\n\n  findAll: async (\n    clientId?: string\n  ): Promise<VisitWithServicesWithProceduresWithStockAllowances[]> => {\n    const whereClause = clientId ? { clientId } : {};\n    const visits = await prismaRepository.visit.findMany({\n      where: whereClause,\n      include: {\n        client: true,\n        user: true,\n        procedures: {\n          include: { stockAllowances: { include: { stockItem: true } } },\n        },\n        visitServices: {\n          include: {\n            service: true,\n          },\n        },\n      },\n    });\n\n    return visits;\n  },\n\n  findById: async (\n    visitId: string\n  ): Promise<VisitWithServicesWithProceduresWithStockAllowances | null> => {\n    const visit = await prismaRepository.visit.findUnique({\n      where: { id: visitId },\n      include: {\n        client: true,\n        user: true,\n        procedures: {\n          include: { stockAllowances: { include: { stockItem: true } } },\n        },\n        visitServices: {\n          include: {\n            service: true,\n          },\n        },\n      },\n    });\n\n    return visit ? visit : null;\n  },\n\n  findByDate: async (filter: {\n    date?: Date;\n    from?: Date;\n    to?: Date;\n    userId: string;\n  }): Promise<VisitWithServicesWithProceduresWithStockAllowances[]> => {\n    const { date, from, to, userId } = filter;\n\n    const where = getWhereFilter(userId, date, from, to);\n\n    const visits: VisitWithServicesWithProceduresWithStockAllowances[] =\n      await prismaRepository.visit.findMany({\n        where,\n        include: {\n          client: true,\n          user: true,\n          procedures: {\n            include: { stockAllowances: { include: { stockItem: true } } },\n          },\n          visitServices: {\n            include: {\n              service: true,\n            },\n          },\n        },\n      });\n    return visits;\n  },\n\n  delete: async (visitId: string): Promise<void> => {\n    await prismaRepository.$transaction([\n      prismaRepository.visitService.deleteMany({\n        where: { visitId },\n      }),\n      prismaRepository.stockAllowance.deleteMany({\n        where: {\n          procedure: {\n            visitId,\n          },\n        },\n      }),\n      prismaRepository.procedure.deleteMany({\n        where: { visitId },\n      }),\n      prismaRepository.visit.delete({\n        where: { id: visitId },\n      }),\n    ]);\n  },\n  update: async (visitData: VisitDetailFormType & HasId): Promise<any> => {\n    const updatedVisit = await prismaRepository.visit.update({\n      where: { id: visitData.id },\n      data: {\n        paidPrice: visitData.paidPrice,\n        date: visitData.date,\n        deposit: Number(visitData.deposit),\n        note: visitData.note,\n\n        depositStatus: { set: visitData.depositStatus },\n        visitServices: {\n          update: {\n            where: {\n              id: visitData.visitServiceId,\n            },\n            data: {\n              serviceId: visitData.hairCutId,\n            },\n          },\n        },\n      },\n    });\n    return updatedVisit;\n  },\n});\n\nconst visitRepositoryDb = createVisitRepositoryDb(prisma);\n\nexport default visitRepositoryDb;\n\nconst getWhereFilter = (\n  userId: string,\n  date?: Date,\n  from?: Date,\n  to?: Date\n) => {\n  const where: Prisma.VisitWhereInput | undefined = {\n    userId,\n  };\n\n  if (date) {\n    const start = new Date(date);\n\n    start.setHours(0, 0, 0, 0);\n    const end = new Date(date);\n    end.setHours(23, 59, 59, 999);\n\n    where.date = {\n      gte: start,\n      lte: end,\n    };\n  } else if (from && to) {\n    where.date = {\n      gte: new Date(from),\n      lte: new Date(to),\n    };\n  } else if (from) {\n    where.date = {\n      gte: new Date(from),\n    };\n  } else if (to) {\n    where.date = {\n      lte: new Date(to),\n    };\n  } else {\n    return where;\n  }\n  return where;\n};\n"],"names":[],"mappings":"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","debug_id":"4b532320-2eb4-529f-8392-2beca241b40b"}