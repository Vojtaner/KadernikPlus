{"version":3,"file":"prisma-team-member-repository.js","sources":["infrastructure/data/prisma/prisma-team-member-repository.ts"],"sourceRoot":"/","sourcesContent":["import { TeamMemberRepositoryPort } from \"../../../application/ports/team-member-repository\";\nimport { PrismaClient, TeamMember } from \".prisma/client\";\nimport prisma from \"./prisma\";\nimport { DEFAULT_USERS_TEAM } from \"../../../entities/team-member\";\n\nconst createTeamMemberRepositoryDb = (\n  prisma: PrismaClient\n): TeamMemberRepositoryPort => ({\n  create: async (memberData: {\n    userId: string;\n    teamId: string;\n    canAccessStocks: boolean;\n    canAccessClients: boolean;\n    canAccessVisits: boolean;\n  }) => {\n    const newMember = await prisma.teamMember.create({\n      data: {\n        userId: memberData.userId,\n        teamId: memberData.teamId,\n        canAccessStocks: memberData.canAccessStocks,\n        canAccessClients: memberData.canAccessClients,\n        canAccessVisits: memberData.canAccessVisits,\n      },\n    });\n    return newMember;\n  },\n  delete: async (teamMemberRowId: string) => {\n    await prisma.teamMember.delete({\n      where: {\n        id: teamMemberRowId,\n      },\n    });\n  },\n\n  findMany: async (teamId: string, userId: string) => {\n    if (DEFAULT_USERS_TEAM === teamId) {\n      const members = await prisma.teamMember.findMany({\n        where: {\n          teamId,\n          NOT: {\n            userId: userId,\n          },\n        },\n        include: {\n          user: {\n            select: {\n              name: true,\n            },\n          },\n        },\n      });\n\n      return members;\n    }\n\n    const members = await prisma.teamMember.findMany({\n      where: {\n        teamId,\n        NOT: {\n          userId: userId,\n        },\n      },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n      },\n    });\n\n    return members;\n  },\n  findUniqueMember: async (userId: string): Promise<TeamMember | null> => {\n    const teamMember = await prisma.teamMember.findFirst({\n      where: {\n        userId,\n      },\n    });\n    return teamMember;\n  },\n  update: async (data) => {\n    const teamMember = await prisma.teamMember.upsert({\n      where: {\n        teamId_userId: {\n          teamId: data.teamId,\n          userId: data.userId,\n        },\n      },\n      update: {\n        canAccessClients: data.canAccessClients,\n        canAccessStocks: data.canAccessStocks,\n        canAccessVisits: data.canAccessVisits,\n      },\n      create: {\n        teamId: data.teamId,\n        userId: data.userId,\n        canAccessClients: data.canAccessClients,\n        canAccessStocks: data.canAccessStocks,\n        canAccessVisits: data.canAccessVisits,\n      },\n    });\n\n    return teamMember;\n  },\n});\n\nconst teamMemberRepositoryDb = createTeamMemberRepositoryDb(prisma);\n\nexport default teamMemberRepositoryDb;\n"],"names":[],"mappings":";;;;;;;AAEA,sDAA8B;AAC9B,+DAAmE;AAEnE,MAAM,4BAA4B,GAAG,CACnC,MAAoB,EACM,EAAE,CAAC,CAAC;IAC9B,MAAM,EAAE,KAAK,EAAE,UAMd,EAAE,EAAE;QACH,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAC/C,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,eAAe,EAAE,UAAU,CAAC,eAAe;gBAC3C,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;gBAC7C,eAAe,EAAE,UAAU,CAAC,eAAe;aAC5C;SACF,CAAC,CAAC;QACH,OAAO,SAAS,CAAC;IACnB,CAAC;IACD,MAAM,EAAE,KAAK,EAAE,eAAuB,EAAE,EAAE;QACxC,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAC7B,KAAK,EAAE;gBACL,EAAE,EAAE,eAAe;aACpB;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,EAAE,KAAK,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;QACjD,IAAI,gCAAkB,KAAK,MAAM,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE;oBACL,MAAM;oBACN,GAAG,EAAE;wBACH,MAAM,EAAE,MAAM;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,IAAI,EAAE;wBACJ,MAAM,EAAE;4BACN,IAAI,EAAE,IAAI;yBACX;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC;QACjB,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC/C,KAAK,EAAE;gBACL,MAAM;gBACN,GAAG,EAAE;oBACH,MAAM,EAAE,MAAM;iBACf;aACF;YACD,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,MAAM,EAAE;wBACN,IAAI,EAAE,IAAI;qBACX;iBACF;aACF;SACF,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IACD,gBAAgB,EAAE,KAAK,EAAE,MAAc,EAA8B,EAAE;QACrE,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;YACnD,KAAK,EAAE;gBACL,MAAM;aACP;SACF,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IACD,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE;QACrB,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAChD,KAAK,EAAE;gBACL,aAAa,EAAE;oBACb,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB;aACF;YACD,MAAM,EAAE;gBACN,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,eAAe,EAAE,IAAI,CAAC,eAAe;aACtC;YACD,MAAM,EAAE;gBACN,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,eAAe,EAAE,IAAI,CAAC,eAAe;aACtC;SACF,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC;IACpB,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,sBAAsB,GAAG,4BAA4B,CAAC,gBAAM,CAAC,CAAC;AAEpE,kBAAe,sBAAsB,CAAC","debug_id":"a680dea3-dbf0-5edb-94d4-f4445c3b1719"}