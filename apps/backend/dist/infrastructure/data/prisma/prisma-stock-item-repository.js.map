{"version":3,"file":"prisma-stock-item-repository.js","sources":["infrastructure/data/prisma/prisma-stock-item-repository.ts"],"sourceRoot":"/","sourcesContent":["import { Prisma, PrismaClient, StockItem } from \".prisma/client\";\nimport { StockItemCreateData } from \"../../../entities/stock-item\";\nimport { StockItemRepositoryPort } from \"../../../application/ports/stock-item-repository\";\nimport prisma from \"./prisma\";\nimport { isPurchaseStockItem } from \"../../../infrastructure/controllers/stock-item-controller\";\nimport { PrismaClientKnownRequestError } from \"@prisma/client/runtime/library\";\nimport { DEFAULT_USERS_TEAM } from \"../../../entities/team-member\";\nimport StockItemAlreadyExistsError from \"../../../domain/errors/stock-item-errors\";\nimport { httpError } from \"../../../adapters/express/httpError\";\n\nconst createStockItemRepositoryDb = (\n  prismaStockRepository: PrismaClient\n): StockItemRepositoryPort => {\n  return {\n    createOrUpdateStockItem: async (\n      data: StockItemCreateData\n    ): Promise<StockItem | undefined> => {\n      try {\n        const isPurchase = isPurchaseStockItem(data);\n\n        if (isPurchase) {\n          const { id, totalPrice, quantity, packageCount } = data;\n          const existing = await prismaStockRepository.stockItem.findFirst({\n            where: { id },\n          });\n\n          if (!existing) {\n            throw httpError(\"Nepodařilo se najít položku na skladu.\", 404);\n          }\n\n          const newQuantityPerPiece = Number(quantity);\n          const newTotalPrice = Number(totalPrice);\n          const newPackageCount = Number(packageCount);\n\n          const newTotalQuantity = newQuantityPerPiece * newPackageCount;\n\n          const updatedQuantity = newTotalQuantity + Number(existing.quantity);\n          const updatedTotalPrice = newTotalPrice + Number(existing.totalPrice);\n          const updatedPackageCount =\n            newPackageCount + Number(existing.packageCount);\n\n          const updatedAvgPrice =\n            updatedQuantity > 0 ? updatedTotalPrice / updatedQuantity : 0;\n\n          if (existing) {\n            return await prismaStockRepository.stockItem.update({\n              where: { id },\n              data: {\n                quantity: new Prisma.Decimal(updatedQuantity),\n                totalPrice: new Prisma.Decimal(updatedTotalPrice),\n                avgUnitPrice: new Prisma.Decimal(updatedAvgPrice),\n                packageCount: new Prisma.Decimal(updatedPackageCount),\n                lastPackageQuantity: new Prisma.Decimal(quantity),\n              },\n            });\n          }\n\n          return;\n        }\n\n        if (data.id) {\n          const {\n            id,\n            itemName,\n            quantity,\n            totalPrice,\n            threshold,\n            unit,\n            stockId,\n            packageCount,\n          } = data;\n\n          const updatedQuantity = packageCount * quantity;\n          const avgPrice =\n            updatedQuantity > 0 ? totalPrice / updatedQuantity : 0;\n\n          return await prisma.stockItem.update({\n            where: { id },\n            data: {\n              itemName,\n              quantity: new Prisma.Decimal(updatedQuantity),\n              totalPrice: new Prisma.Decimal(totalPrice),\n              avgUnitPrice: new Prisma.Decimal(avgPrice),\n              threshold: new Prisma.Decimal(threshold),\n              packageCount: new Prisma.Decimal(packageCount),\n              lastPackageQuantity: new Prisma.Decimal(quantity),\n              unit,\n              stockId,\n            },\n          });\n        }\n\n        const {\n          itemName,\n          unit,\n          quantity,\n          threshold,\n          totalPrice,\n          stockId,\n          packageCount,\n        } = data;\n\n        const updatedQuantity = packageCount * quantity;\n        const avgPrice = updatedQuantity > 0 ? totalPrice / updatedQuantity : 0;\n        const itemNameAlreadyExists = await prisma.stockItem.findUnique({\n          where: {\n            stockId_itemName_isActive: {\n              stockId: data.stockId,\n              itemName: data.itemName,\n              isActive: true,\n            },\n          },\n        });\n\n        if (itemNameAlreadyExists) {\n          throw httpError(\"Položka na vašem skladu už existuje.\", 409);\n        }\n\n        return await prismaStockRepository.stockItem.create({\n          data: {\n            itemName,\n            unit,\n            quantity: new Prisma.Decimal(updatedQuantity),\n            totalPrice: new Prisma.Decimal(totalPrice),\n            avgUnitPrice: new Prisma.Decimal(avgPrice),\n            threshold: new Prisma.Decimal(threshold),\n            isActive: true,\n            packageCount: new Prisma.Decimal(packageCount),\n            lastPackageQuantity: new Prisma.Decimal(quantity),\n            stock: { connect: { id: stockId } },\n          },\n        });\n      } catch (err) {\n        if (\n          err instanceof PrismaClientKnownRequestError &&\n          err.code === \"P2002\"\n        ) {\n          throw StockItemAlreadyExistsError();\n        }\n\n        throw err;\n      }\n    },\n    deleteStockItem: async (id: string, userId: string): Promise<void> => {\n      const teamMember = await prismaStockRepository.teamMember.findFirst({\n        where: { userId },\n      });\n\n      const stockItem = await prismaStockRepository.stockItem.findUnique({\n        where: { id },\n        include: { stock: true },\n      });\n\n      if (!stockItem) {\n        throw new Error(\"Položka skladu nebyla nalezena.\");\n      }\n\n      const isOwnStock =\n        stockItem.stock.teamId === DEFAULT_USERS_TEAM &&\n        stockItem.stock.ownerId === userId;\n\n      const isTeamStock =\n        stockItem.stock.teamId === teamMember?.teamId &&\n        teamMember?.canAccessStocks;\n\n      if (!isOwnStock && !isTeamStock) {\n        throw new Error(\"Nemáte oprávnění k odstranění této položky skladu.\");\n      }\n\n      await prismaStockRepository.stockItem.update({\n        where: { id },\n        data: { isActive: false },\n      });\n    },\n\n    getStockItemById: async (\n      stockItemId: string,\n      userId: string\n    ): Promise<StockItem | null> => {\n      const teamMember = await prismaStockRepository.teamMember.findFirst({\n        where: { userId },\n      });\n\n      const stockItem = await prismaStockRepository.stockItem.findUnique({\n        where: { id: stockItemId, isActive: true },\n        include: { stock: true },\n      });\n\n      if (!stockItem) {\n        throw new Error(\"Položka skladu nebyla nalezena.\");\n      }\n\n      const isOwnStock =\n        stockItem.stock.teamId === DEFAULT_USERS_TEAM &&\n        stockItem.stock.ownerId === userId;\n\n      const isTeamStock =\n        stockItem.stock.teamId === teamMember?.teamId &&\n        teamMember?.canAccessStocks;\n\n      if (isOwnStock || isTeamStock) {\n        return stockItem;\n      }\n\n      throw new Error(\"Nemáte oprávnění k přístupu k této položce skladu.\");\n    },\n\n    findStockItemByName: async (\n      itemName: string\n    ): Promise<StockItem | null> => {\n      const stockItem = await prismaStockRepository.stockItem.findFirst({\n        where: { itemName: itemName },\n      });\n      return stockItem ?? null;\n    },\n    getStockItemsByStockId: async (\n      stockId: string,\n      userId: string\n    ): Promise<StockItem[]> => {\n      const teamMember = await prisma.teamMember.findUnique({\n        where: { userId },\n      });\n\n      if (!teamMember) {\n        throw new Error(\"Nejste součástí žádného týmu.\");\n      }\n\n      console.log({ userId });\n\n      if (teamMember?.canAccessStocks) {\n        const stockIds = await prismaStockRepository.stock\n          .findMany({\n            where: { teamId: teamMember?.teamId },\n          })\n          .then((stocks) => {\n            return stocks\n              .map((stock) => stock.id)\n              .filter((stock) => stock !== null);\n          });\n\n        if (stockIds.length === 0) {\n          throw new Error(\"Žádné zásoby nenalezeny.\");\n        }\n\n        const stockItems = await prismaStockRepository.stockItem.findMany({\n          where: { stockId: { in: stockIds }, isActive: true },\n        });\n\n        return stockItems;\n      } else {\n        const stock = await prismaStockRepository.stock.findFirst({\n          where: { ownerId: teamMember?.userId },\n        });\n\n        const stockItems = await prismaStockRepository.stockItem.findMany({\n          where: { stockId: stock?.id, isActive: true },\n        });\n\n        return stockItems;\n      }\n    },\n  };\n};\n\nconst stockItemRepositoryDb = createStockItemRepositoryDb(prisma);\n\nexport default stockItemRepositoryDb;\n"],"names":[],"mappings":"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","debug_id":"60679a39-d339-525f-9002-3ea755d97b7b"}