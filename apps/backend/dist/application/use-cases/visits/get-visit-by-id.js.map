{"version":3,"file":"get-visit-by-id.js","sources":["application/use-cases/visits/get-visit-by-id.ts"],"sourceRoot":"/","sourcesContent":["import { VisitRepositoryPort } from \"../../ports/visit-repository\";\n// import mapToDomainVisit from \"../../../infrastructure/mappers/visit-mapper\";\nimport visitRepositoryDb from \"../../../infrastructure/data/prisma/prisma-visit-repository\";\nimport { VisitWithServices } from \"@/infrastructure/mappers/visit-mapper\";\n\nexport function VisitNotFoundError(id: string): Error {\n  const error = new Error(`Visit with ID '${id}' not found.`);\n  error.name = \"VisitNotFoundError\";\n  return error;\n}\n\nconst createGetVisitByIdUseCase = (dependencies: {\n  visitRepositoryDb: VisitRepositoryPort;\n}) => {\n  return {\n    //\n    execute: async (visitId: string): Promise<VisitWithServices | null> => {\n      const visit = await dependencies.visitRepositoryDb.findById(visitId);\n\n      if (!visit) {\n        throw VisitNotFoundError(visitId);\n      }\n\n      return visit ?? null;\n    },\n  };\n};\n\nconst getVisitByIdUseCase = createGetVisitByIdUseCase({ visitRepositoryDb });\n\nexport type CreateGetVisitByIdUseCaseType = ReturnType<\n  typeof createGetVisitByIdUseCase\n>;\nexport default getVisitByIdUseCase;\n"],"names":[],"mappings":";;;;;;;AAKA,gDAIC;AARD,+EAA+E;AAC/E,0HAA4F;AAG5F,SAAgB,kBAAkB,CAAC,EAAU;IAC3C,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,kBAAkB,EAAE,cAAc,CAAC,CAAC;IAC5D,KAAK,CAAC,IAAI,GAAG,oBAAoB,CAAC;IAClC,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,yBAAyB,GAAG,CAAC,YAElC,EAAE,EAAE;IACH,OAAO;QACL,EAAE;QACF,OAAO,EAAE,KAAK,EAAE,OAAe,EAAqC,EAAE;YACpE,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAErE,IAAI,CAAC,KAAK,EAAE,CAAC;gBACX,MAAM,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC;YAED,OAAO,KAAK,IAAI,IAAI,CAAC;QACvB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,mBAAmB,GAAG,yBAAyB,CAAC,EAAE,iBAAiB,EAAjB,iCAAiB,EAAE,CAAC,CAAC;AAK7E,kBAAe,mBAAmB,CAAC","debug_id":"d02ac1a5-c902-53dc-a925-04c68bc6f290"}