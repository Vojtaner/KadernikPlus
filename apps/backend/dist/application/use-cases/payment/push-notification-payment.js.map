{"version":3,"file":"push-notification-payment.js","sources":["application/use-cases/payment/push-notification-payment.ts"],"sourceRoot":"/","sourcesContent":["import { Payment } from \"@prisma/client\";\nimport { PaymentRepositoryPort } from \"../../ports/payment-repository\";\nimport paymentRepositoryDb from \"../../../infrastructure/data/prisma/prisma-payment-repository\";\nimport { SubscriptionRepositoryPort } from \"../../../application/ports/subscription-repository\";\nimport subscriptionRepositoryDb from \"../../../infrastructure/data/prisma/prisma-subscription-repository\";\n\nconst createPushNotificationPaymentUseCase = (dependencies: {\n  paymentRepositoryDb: PaymentRepositoryPort;\n  subscriptionRepositoryDb: SubscriptionRepositoryPort;\n}) => ({\n  execute: async (data: Partial<Payment>, id?: string) => {\n    try {\n      const updatedPayment =\n        await dependencies.paymentRepositoryDb.updatePayment({\n          transactionId: data.transactionId,\n          status: data.status,\n          refId: Number(data.refId),\n        });\n\n      const now = new Date();\n      const plus30DaysDate = new Date(now);\n      plus30DaysDate.setDate(now.getDate() + 30);\n\n      if (updatedPayment && updatedPayment.status === \"PAID\") {\n        const updatedSubscription =\n          await dependencies.subscriptionRepositoryDb.update(\n            updatedPayment.subscriptionId,\n            {\n              status: \"ACTIVE\",\n              startDate: now,\n              endDate: plus30DaysDate,\n            }\n          );\n\n        return updatedSubscription;\n      }\n    } catch (error) {\n      console.log(\"createPushNotificationPaymentUseCase\", error);\n      throw new Error(\"Platbu se nepovedlo zpracovat.\");\n    }\n  },\n});\n\nexport type UpdatePushNotificationPaymentUseCaseType = ReturnType<\n  typeof createPushNotificationPaymentUseCase\n>;\n\nconst updatePushNotificationPaymentUseCase =\n  createPushNotificationPaymentUseCase({\n    paymentRepositoryDb,\n    subscriptionRepositoryDb,\n  });\n\nexport default updatePushNotificationPaymentUseCase;\n"],"names":[],"mappings":";;;;;;;AAEA,8HAAgG;AAEhG,wIAA0G;AAE1G,MAAM,oCAAoC,GAAG,CAAC,YAG7C,EAAE,EAAE,CAAC,CAAC;IACL,OAAO,EAAE,KAAK,EAAE,IAAsB,EAAE,EAAW,EAAE,EAAE;QACrD,IAAI,CAAC;YACH,MAAM,cAAc,GAClB,MAAM,YAAY,CAAC,mBAAmB,CAAC,aAAa,CAAC;gBACnD,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1B,CAAC,CAAC;YAEL,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,MAAM,cAAc,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;YAE3C,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;gBACvD,MAAM,mBAAmB,GACvB,MAAM,YAAY,CAAC,wBAAwB,CAAC,MAAM,CAChD,cAAc,CAAC,cAAc,EAC7B;oBACE,MAAM,EAAE,QAAQ;oBAChB,SAAS,EAAE,GAAG;oBACd,OAAO,EAAE,cAAc;iBACxB,CACF,CAAC;gBAEJ,OAAO,mBAAmB,CAAC;YAC7B,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;YAC3D,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;CACF,CAAC,CAAC;AAMH,MAAM,oCAAoC,GACxC,oCAAoC,CAAC;IACnC,mBAAmB,EAAnB,mCAAmB;IACnB,wBAAwB,EAAxB,wCAAwB;CACzB,CAAC,CAAC;AAEL,kBAAe,oCAAoC,CAAC","debug_id":"b948ede2-1bf6-51ff-b76b-e2aa8e0a0fee"}