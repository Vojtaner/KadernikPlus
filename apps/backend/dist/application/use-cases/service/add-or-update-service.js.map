{"version":3,"file":"add-or-update-service.js","sources":["application/use-cases/service/add-or-update-service.ts"],"sourceRoot":"/","sourcesContent":["import { ServiceRepositoryPort } from \"../../ports/service-repository\";\nimport serviceRepositoryDb from \"../../../infrastructure/data/prisma/prisma-service-repository\";\nimport { WithUserId } from \"@/entities/user\";\nimport { Service } from \"@prisma/client\";\nimport logRepositoryDb from \"../../../infrastructure/data/prisma/prisma-log-repository\";\nimport { LogRepositoryPort } from \"../../../application/ports/log-repository\";\nimport { ServiceCreateOrUpdateData } from \"../../../entities/service\";\nimport { TeamMemberRepositoryPort } from \"@/application/ports/team-member-repository\";\nimport teamMemberRepositoryDb from \"../../../infrastructure/data/prisma/prisma-team-member-repository\";\n\nclass ServiceAlreadyExistsError extends Error {\n  constructor(name: string) {\n    super(`Service '${name}' already exists.`);\n    this.name = \"ServiceAlreadyExistsError\";\n  }\n}\n\nconst createAddOrUpdateServiceUseCase = (dependencies: {\n  serviceRepositoryDb: ServiceRepositoryPort;\n  logRepositoryDb: LogRepositoryPort;\n  teamMemberRepositoryDb: TeamMemberRepositoryPort;\n}) => {\n  return {\n    execute: async (\n      serviceData: WithUserId<ServiceCreateOrUpdateData>\n    ): Promise<Service> => {\n      let action = \"create\";\n      let serviceId: string;\n      let message = \"\";\n\n      const newOrUpdatedService =\n        await dependencies.serviceRepositoryDb.addOrUpdate(serviceData);\n\n      if (serviceData.id) {\n        action = \"update\";\n        serviceId = serviceData.id;\n        message = `Upravená služba ${serviceData.serviceName}`;\n      } else {\n        serviceId = newOrUpdatedService.id;\n        message = `Vytvořena služba ${newOrUpdatedService.serviceName}`;\n      }\n\n      const teamMember =\n        await dependencies.teamMemberRepositoryDb.findUniqueMember(\n          serviceData.userId\n        );\n\n      if (!teamMember) {\n        throw Error(\"Chybí team id.\");\n      }\n\n      await dependencies.logRepositoryDb.log({\n        userId: serviceData.userId,\n        action,\n        entityType: \"service\",\n        entityId: serviceId,\n        message,\n        metadata: { input: serviceData },\n        teamId: teamMember?.teamId,\n      });\n\n      return newOrUpdatedService;\n    },\n  };\n};\n\nconst addOrUpdateServiceUseCase = createAddOrUpdateServiceUseCase({\n  serviceRepositoryDb: serviceRepositoryDb,\n  logRepositoryDb: logRepositoryDb,\n  teamMemberRepositoryDb: teamMemberRepositoryDb,\n});\n\nexport type AddOrUpdateServiceUseCaseType = ReturnType<\n  typeof createAddOrUpdateServiceUseCase\n>;\n\nexport default addOrUpdateServiceUseCase;\n"],"names":[],"mappings":";;;;;;;AACA,8HAAgG;AAGhG,sHAAwF;AAIxF,sIAAuG;AAEvG,MAAM,yBAA0B,SAAQ,KAAK;IAC3C,YAAY,IAAY;QACtB,KAAK,CAAC,YAAY,IAAI,mBAAmB,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,2BAA2B,CAAC;IAC1C,CAAC;CACF;AAED,MAAM,+BAA+B,GAAG,CAAC,YAIxC,EAAE,EAAE;IACH,OAAO;QACL,OAAO,EAAE,KAAK,EACZ,WAAkD,EAChC,EAAE;YACpB,IAAI,MAAM,GAAG,QAAQ,CAAC;YACtB,IAAI,SAAiB,CAAC;YACtB,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,MAAM,mBAAmB,GACvB,MAAM,YAAY,CAAC,mBAAmB,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAElE,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC;gBACnB,MAAM,GAAG,QAAQ,CAAC;gBAClB,SAAS,GAAG,WAAW,CAAC,EAAE,CAAC;gBAC3B,OAAO,GAAG,mBAAmB,WAAW,CAAC,WAAW,EAAE,CAAC;YACzD,CAAC;iBAAM,CAAC;gBACN,SAAS,GAAG,mBAAmB,CAAC,EAAE,CAAC;gBACnC,OAAO,GAAG,oBAAoB,mBAAmB,CAAC,WAAW,EAAE,CAAC;YAClE,CAAC;YAED,MAAM,UAAU,GACd,MAAM,YAAY,CAAC,sBAAsB,CAAC,gBAAgB,CACxD,WAAW,CAAC,MAAM,CACnB,CAAC;YAEJ,IAAI,CAAC,UAAU,EAAE,CAAC;gBAChB,MAAM,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAChC,CAAC;YAED,MAAM,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC;gBACrC,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,MAAM;gBACN,UAAU,EAAE,SAAS;gBACrB,QAAQ,EAAE,SAAS;gBACnB,OAAO;gBACP,QAAQ,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE;gBAChC,MAAM,EAAE,UAAU,EAAE,MAAM;aAC3B,CAAC,CAAC;YAEH,OAAO,mBAAmB,CAAC;QAC7B,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,yBAAyB,GAAG,+BAA+B,CAAC;IAChE,mBAAmB,EAAE,mCAAmB;IACxC,eAAe,EAAE,+BAAe;IAChC,sBAAsB,EAAE,uCAAsB;CAC/C,CAAC,CAAC;AAMH,kBAAe,yBAAyB,CAAC","debug_id":"bae031c6-105a-5d43-b0bd-92fe18bb5f2d"}