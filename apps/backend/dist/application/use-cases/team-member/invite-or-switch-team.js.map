{"version":3,"file":"invite-or-switch-team.js","sources":["application/use-cases/team-member/invite-or-switch-team.ts"],"sourceRoot":"/","sourcesContent":["import { TeamMemberRepositoryPort } from \"../../../application/ports/team-member-repository\";\nimport { UserRepositoryPort } from \"../../../application/ports/user-repository\";\nimport teamMemberRepositoryDb from \"../../../infrastructure/data/prisma/prisma-team-member-repository\";\nimport userRepositoryDb from \"../../../infrastructure/data/prisma/prisma-user-repository\";\nimport stockRepositoryDb from \"../../../infrastructure/data/prisma/prisma-stock-repository\";\nimport { StockRepositoryPort } from \"../../../application/ports/stock-repository\";\n\nconst createInviteOrSwitchTeamUseCase = (dependencies: {\n  teamMemberRepositoryDb: TeamMemberRepositoryPort;\n  userRepositoryDb: UserRepositoryPort;\n  stockRepositoryDb: StockRepositoryPort;\n}) => {\n  return {\n    execute: async (data: {\n      invitedEmail: string;\n      invitedUserIdLast4: string;\n      newTeamId: string;\n      userId: string;\n    }) => {\n      const { invitedEmail, invitedUserIdLast4, newTeamId } = data;\n      //najít invited user za email\n      //najit jeho teamId\n      //najít najit dle toho teamId\n\n      const invitedUser = await dependencies.userRepositoryDb.findByEmail(\n        invitedEmail\n      );\n\n      if (!invitedUser) {\n        throw new Error(\"User not found with this email.\");\n      }\n\n      const last4 = invitedUser.id.slice(-4);\n\n      if (last4 !== invitedUserIdLast4) {\n        throw new Error(\"User ID mismatch.\");\n      }\n\n      const currentMembership =\n        await dependencies.teamMemberRepositoryDb.findUniqueMember(\n          invitedUser.id\n        );\n\n      if (currentMembership && currentMembership.teamId !== newTeamId) {\n        await dependencies.teamMemberRepositoryDb.delete(currentMembership.id);\n      }\n\n      const stock = await dependencies.stockRepositoryDb.updateStock(\n        newTeamId,\n        invitedUser.id\n      );\n\n      const newMember = await dependencies.teamMemberRepositoryDb.create({\n        userId: invitedUser.id,\n        teamId: newTeamId,\n        canAccessStocks: false,\n        canAccessClients: false,\n        canAccessVisits: false,\n      });\n\n      return newMember;\n    },\n  };\n};\n\nexport type InviteOrSwitchTeamUseCaseType = ReturnType<\n  typeof createInviteOrSwitchTeamUseCase\n>;\n\nconst inviteOrSwitchTeamUseCase = createInviteOrSwitchTeamUseCase({\n  userRepositoryDb,\n  teamMemberRepositoryDb,\n  stockRepositoryDb,\n});\n\nexport default inviteOrSwitchTeamUseCase;\n"],"names":[],"mappings":";;;;;;;AAEA,sIAAuG;AACvG,wHAA0F;AAC1F,0HAA4F;AAG5F,MAAM,+BAA+B,GAAG,CAAC,YAIxC,EAAE,EAAE;IACH,OAAO;QACL,OAAO,EAAE,KAAK,EAAE,IAKf,EAAE,EAAE;YACH,MAAM,EAAE,YAAY,EAAE,kBAAkB,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;YAC7D,6BAA6B;YAC7B,mBAAmB;YACnB,6BAA6B;YAE7B,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,WAAW,CACjE,YAAY,CACb,CAAC;YAEF,IAAI,CAAC,WAAW,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;YACrD,CAAC;YAED,MAAM,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,KAAK,KAAK,kBAAkB,EAAE,CAAC;gBACjC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACvC,CAAC;YAED,MAAM,iBAAiB,GACrB,MAAM,YAAY,CAAC,sBAAsB,CAAC,gBAAgB,CACxD,WAAW,CAAC,EAAE,CACf,CAAC;YAEJ,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;gBAChE,MAAM,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACzE,CAAC;YAED,MAAM,KAAK,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC,WAAW,CAC5D,SAAS,EACT,WAAW,CAAC,EAAE,CACf,CAAC;YAEF,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,sBAAsB,CAAC,MAAM,CAAC;gBACjE,MAAM,EAAE,WAAW,CAAC,EAAE;gBACtB,MAAM,EAAE,SAAS;gBACjB,eAAe,EAAE,KAAK;gBACtB,gBAAgB,EAAE,KAAK;gBACvB,eAAe,EAAE,KAAK;aACvB,CAAC,CAAC;YAEH,OAAO,SAAS,CAAC;QACnB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAMF,MAAM,yBAAyB,GAAG,+BAA+B,CAAC;IAChE,gBAAgB,EAAhB,gCAAgB;IAChB,sBAAsB,EAAtB,uCAAsB;IACtB,iBAAiB,EAAjB,iCAAiB;CAClB,CAAC,CAAC;AAEH,kBAAe,yBAAyB,CAAC","debug_id":"a656266c-5f4d-57a0-8ab9-20bc377cb7cc"}