{"version":3,"file":"ensure-user-exists.js","sources":["application/use-cases/user/ensure-user-exists.ts"],"sourceRoot":"/","sourcesContent":["import { ManagementClient } from \"auth0\";\nimport userRepositoryDb from \"../../../infrastructure/data/prisma/prisma-user-repository\";\nimport addUserUseCase, { AddUserUseCaseType } from \"./add-user\";\nimport { UserRepositoryPort } from \"@/application/ports/user-repository\";\nimport { auth0ManagementApi } from \"../../../application/services/auth0/auth0ManagementApi\";\n\nexport const createEnsureUserExists = (dependencies: {\n  addUserUseCase: AddUserUseCaseType;\n  userRepositoryDb: UserRepositoryPort;\n  auth0ManagementApi: ManagementClient;\n}) => {\n  return {\n    execute: async (userId: string) => {\n      if (!userId) {\n        throw new Error(\"User could not be created.\");\n      }\n\n      const user = await dependencies.userRepositoryDb.findById(userId);\n\n      if (!user) {\n        try {\n          const managementApiData =\n            await dependencies.auth0ManagementApi.users.get({\n              id: userId,\n            });\n\n          const {\n            data: { email, name },\n          } = managementApiData;\n\n          if (!managementApiData) {\n            throw new Error(\"Špatně nastavená pravidla v Auth0.\");\n          }\n\n          const user = await dependencies.addUserUseCase.execute({\n            email,\n            id: userId,\n            name,\n            authProvider: \"auth0\",\n          });\n        } catch (error) {\n          console.error(\"createEnsureUserExists\", error);\n          throw new Error(\"Chyba v ověřování uživatele.\");\n        }\n      }\n    },\n  };\n};\n\nexport type EnsureUserExistsUseCaseType = ReturnType<\n  typeof createEnsureUserExists\n>;\nconst ensureUserExistsUseCase = createEnsureUserExists({\n  addUserUseCase,\n  userRepositoryDb,\n  auth0ManagementApi,\n});\n\nexport default ensureUserExistsUseCase;\n"],"names":[],"mappings":";;;;;;;;AACA,wHAA0F;AAC1F,0DAAgE;AAEhE,+FAA4F;AAErF,MAAM,sBAAsB,GAAG,CAAC,YAItC,EAAE,EAAE;IACH,OAAO;QACL,OAAO,EAAE,KAAK,EAAE,MAAc,EAAE,EAAE;YAChC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAChD,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAElE,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,IAAI,CAAC;oBACH,MAAM,iBAAiB,GACrB,MAAM,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC;wBAC9C,EAAE,EAAE,MAAM;qBACX,CAAC,CAAC;oBAEL,MAAM,EACJ,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,GACtB,GAAG,iBAAiB,CAAC;oBAEtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACvB,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;oBACxD,CAAC;oBAED,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,cAAc,CAAC,OAAO,CAAC;wBACrD,KAAK;wBACL,EAAE,EAAE,MAAM;wBACV,IAAI;wBACJ,YAAY,EAAE,OAAO;qBACtB,CAAC,CAAC;gBACL,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,OAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;oBAC/C,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;QACH,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAzCW,QAAA,sBAAsB,0BAyCjC;AAKF,MAAM,uBAAuB,GAAG,IAAA,8BAAsB,EAAC;IACrD,cAAc,EAAd,kBAAc;IACd,gBAAgB,EAAhB,gCAAgB;IAChB,kBAAkB,EAAlB,uCAAkB;CACnB,CAAC,CAAC;AAEH,kBAAe,uBAAuB,CAAC","debug_id":"9dd213a9-4149-5e92-a746-a58b9130b20d"}