{"version":3,"file":"add-user.js","sources":["application/use-cases/user/add-user.ts"],"sourceRoot":"/","sourcesContent":["import { User, UserCreateData } from \"@/entities/user\";\nimport { UserRepositoryPort } from \"../../ports/user-repository\";\nimport userRepositoryDb from \"../../../infrastructure/data/prisma/prisma-user-repository\";\nimport { StockRepositoryPort } from \"../../ports/stock-repository\";\nimport stockRepositoryDb from \"../../../infrastructure/data/prisma/prisma-stock-repository\";\nimport createTeamMemberUseCase, {\n  CreateTeamMemberUseCaseType,\n} from \"../team-member/create-team-member\";\nimport createTeamUseCase, { CreateTeamUseCaseType } from \"../team/create-team\";\n\nclass UserAlreadyExistsError extends Error {\n  constructor(email: string) {\n    super(`User with email ${email} already exists.`);\n    this.name = \"UserAlreadyExistsError\";\n  }\n}\n\nconst createAddUserUseCase = (dependencies: {\n  userRepositoryDb: UserRepositoryPort;\n  stockRepositoryDb: StockRepositoryPort;\n  createTeamMemberUseCase: CreateTeamMemberUseCaseType;\n  createTeamUseCase: CreateTeamUseCaseType;\n}) => {\n  return {\n    execute: async (userData: UserCreateData): Promise<User> => {\n      if (!userData.id) {\n        throw new Error(\"User could not be created.\");\n      }\n\n      const existingUser = await dependencies.userRepositoryDb.findById(\n        userData.id\n      );\n\n      if (existingUser) {\n        throw new UserAlreadyExistsError(userData.email);\n      }\n\n      const newUser = await dependencies.userRepositoryDb.add(userData);\n\n      const newTeam = await dependencies.createTeamUseCase.execute({\n        name: `TÃ½m - ${newUser.name}`,\n      });\n\n      const newTeamMember = await dependencies.createTeamMemberUseCase.execute({\n        userId: newUser.id,\n        teamId: newTeam.id,\n      });\n\n      const newStock = await dependencies.stockRepositoryDb.createStock(\n        newUser.id,\n        newTeam.id\n      );\n\n      return newUser;\n    },\n  };\n};\n\nexport type AddUserUseCaseType = ReturnType<typeof createAddUserUseCase>;\nconst addUserUseCase = createAddUserUseCase({\n  userRepositoryDb,\n  stockRepositoryDb,\n  createTeamMemberUseCase,\n  createTeamUseCase,\n});\n\nexport default addUserUseCase;\n"],"names":[],"mappings":";;;;;;;AAEA,wHAA0F;AAE1F,0HAA4F;AAC5F,2FAE2C;AAC3C,sEAA+E;AAE/E,MAAM,sBAAuB,SAAQ,KAAK;IACxC,YAAY,KAAa;QACvB,KAAK,CAAC,mBAAmB,KAAK,kBAAkB,CAAC,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,wBAAwB,CAAC;IACvC,CAAC;CACF;AAED,MAAM,oBAAoB,GAAG,CAAC,YAK7B,EAAE,EAAE;IACH,OAAO;QACL,OAAO,EAAE,KAAK,EAAE,QAAwB,EAAiB,EAAE;YACzD,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;YAChD,CAAC;YAED,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAC/D,QAAQ,CAAC,EAAE,CACZ,CAAC;YAEF,IAAI,YAAY,EAAE,CAAC;gBACjB,MAAM,IAAI,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnD,CAAC;YAED,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAElE,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC,OAAO,CAAC;gBAC3D,IAAI,EAAE,SAAS,OAAO,CAAC,IAAI,EAAE;aAC9B,CAAC,CAAC;YAEH,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,uBAAuB,CAAC,OAAO,CAAC;gBACvE,MAAM,EAAE,OAAO,CAAC,EAAE;gBAClB,MAAM,EAAE,OAAO,CAAC,EAAE;aACnB,CAAC,CAAC;YAEH,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,iBAAiB,CAAC,WAAW,CAC/D,OAAO,CAAC,EAAE,EACV,OAAO,CAAC,EAAE,CACX,CAAC;YAEF,OAAO,OAAO,CAAC;QACjB,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAGF,MAAM,cAAc,GAAG,oBAAoB,CAAC;IAC1C,gBAAgB,EAAhB,gCAAgB;IAChB,iBAAiB,EAAjB,iCAAiB;IACjB,uBAAuB,EAAvB,4BAAuB;IACvB,iBAAiB,EAAjB,qBAAiB;CAClB,CAAC,CAAC;AAEH,kBAAe,cAAc,CAAC","debug_id":"970aa0d1-e4e2-5839-95db-e7078e767705"}