{"version":3,"file":"get-user-by-id.js","sources":["application/use-cases/user/get-user-by-id.ts"],"sourceRoot":"/","sourcesContent":["import { User } from \"@/entities/user\";\nimport { UserRepositoryPort } from \"../../ports/user-repository\";\nimport userRepositoryDb from \"../../../infrastructure/data/prisma/prisma-user-repository\";\n\nconst UserNotFoundError = (id: string) => {\n  const error = new Error(`User with ID ${id} not found.`);\n  error.name = \"UserNotFoundError\";\n  throw error;\n};\n\nconst createGetUserByIdUseCase = (dependencies: {\n  userRepositoryDb: UserRepositoryPort;\n}) => {\n  return {\n    execute: async (userId: string): Promise<User> => {\n      const user = await dependencies.userRepositoryDb.findById(userId);\n\n      if (!user) {\n        return UserNotFoundError(userId);\n      }\n\n      return user;\n    },\n  };\n};\n\nconst getUserByIdUseCase = createGetUserByIdUseCase({ userRepositoryDb });\nexport type GetUserByIdUseCaseType = ReturnType<\n  typeof createGetUserByIdUseCase\n>;\n\nexport default getUserByIdUseCase;\n"],"names":[],"mappings":";;;;;;;AAEA,wHAA0F;AAE1F,MAAM,iBAAiB,GAAG,CAAC,EAAU,EAAE,EAAE;IACvC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;IACzD,KAAK,CAAC,IAAI,GAAG,mBAAmB,CAAC;IACjC,MAAM,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,wBAAwB,GAAG,CAAC,YAEjC,EAAE,EAAE;IACH,OAAO;QACL,OAAO,EAAE,KAAK,EAAE,MAAc,EAAiB,EAAE;YAC/C,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAElE,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,OAAO,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACnC,CAAC;YAED,OAAO,IAAI,CAAC;QACd,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,wBAAwB,CAAC,EAAE,gBAAgB,EAAhB,gCAAgB,EAAE,CAAC,CAAC;AAK1E,kBAAe,kBAAkB,CAAC","debug_id":"710d3b94-2bcc-5bd5-8afd-af95c0699212"}