services:
  db:
    image: mysql/mysql-server:8.0
    container_name: mysql-db-hairdresser
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: my_secret_password
      MYSQL_DATABASE: my_app_db
      MYSQL_USER: root
      MYSQL_PASSWORD: my_secret_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/mysql/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    container_name: adminer-gui
    restart: always
    ports:
      - "8089:8080" # Access Adminer on your host at http://localhost:8080
    environment:
      ADMINER_DEFAULT_SERVER: db # This connects to the 'db' service in the same compose file
    depends_on:
      - db # Ensures 'db' starts before 'adminer'

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: node-hairdresser-api
    restart: always
    ports:
      - "3021:3021" # or whatever port your Node.js server runs on
    environment:
      DATABASE_URL: "mysql://root:my_secret_password@db:3306/my_app_db"
      PORT: 3021
    depends_on:
      - db
    command: sh ./init.sh

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_IS_DEVELOPMENT: "false"
        VITE_ENABLE_MOCKS: "false"
        VITE_PORT: "3021"
    container_name: frontend-hairdresser
    restart: always
    ports:
      - "3004:8083" # host:container

    depends_on:
      - backend

  website:
    build:
      context: .
      dockerfile: ./website/Dockerfile
    ports:
      - "3011:80"
    restart: unless-stopped
    volumes:
      - ./website/lonyo/:/usr/share/nginx/html:ro
volumes:
  db_data:
